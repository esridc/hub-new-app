{"version":3,"names":["autoMode","darkMode","initModeChangeEvent","classList","document","body","prefersDark","window","matchMedia","matches","getMode","contains","emitModeChange","mode","dispatchEvent","CustomEvent","bubbles","detail","modeChangeHandler","newMode","currentMode","addEventListener","event","MutationObserver","observe","attributes","attributeFilter","appGlobalScript","isBrowser","location","readyState","once","globalScripts","requiresFormData","params","Object","keys","some","key","value","toParam","type","constructor","name","processParams","newParams","forEach","_a","_b","param","firstElementType","JSON","stringify","join","valueOf","Array","isArray","encodeParam","map","arrayElem","encodeURIComponent","encodeQueryString","browserPonyfill","FormData","globalThis","File","Blob","encodeFormData","forceFormData","useFormData","formData","filename","append","ArcGISRequestError","Error","message","code","response","url","options","super","actualProto","prototype","setPrototypeOf","this","originalMessage","warn","console","apply","getFetch","Promise","resolve","fetch","Headers","Response","Request","request","NODEJS_DEFAULT_REFERER_HEADER","getDefaultRequestOptions","DEFAULT_ARCGIS_REQUEST_OPTIONS","httpMethod","f","ArcGISAuthError","retry","getSession","retryLimit","tries","retryRequest","reject","then","session","newOptions","assign","authentication","internalRequest","catch","e","checkForErrors","originalAuthError","error","messageCode","errorCode","status","parse","statusMessage","requestOptions","defaults","headers","rawResponse","fetchOptions","method","signal","credentials","indexOf","rawToken","portal","getToken","startsWith","suppressWarnings","ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING","originalUrl","err","token","length","getDomainCredentials","requestHeaders","hideToken","queryParams","urlWithQueryString","maxUrlLength","RegExp","test","referer","ok","json","jsonError","statusText","details","formattedMessage","trim","text","blob","data","truncatedUrl","toLowerCase","split","federatedServers","expires","Date","now","canRefresh","refreshCredentials","appendCustomParams","customOptions","baseOptions","requestOptionsKeys","reduce","cleanUrl","slice","getPortalUrl","SearchQueryBuilder","q","termStack","rangeStack","openGroups","match","terms","concat","in","field","fn","hasRange","hasTerms","commit","startGroup","endGroup","and","addModifier","or","not","from","term","to","boost","num","cleanup","clone","modifier","currentModifer","toUpperCase","hasWhiteSpace","s","formatTerm","getTime","undefined","oldQ","replace","genericSearch","search","searchType","path","groupId","r","nextStart","nextPage","start","searchItems","hubNewAppCss","HubNewApp","builders","new","view","defaultBuilder","render","h","Host","id","scale","width","ref","el","modal","slot","renderContent","renderNewButton","openModal","open","componentWillLoad","checkforExistingContent","setInterval","checkForNewContent","async","query","username","sortOrder","sortField","existingItems","results","newAppTimestamp","startDate","endDate","log","getBuilder","appType","items","app","renderGallery","cards","item","class","title","snippet","appearance","kind","icon","href","target","collapsed","position","active","showSelectApp","indicator","onClick","showNewApp","heading","renderNewContent","renderApp","renderNewOptions","renderLoading","placeholder","layout","checked","label","color","newAppOpen","newAppSelected","debug","builder","filter"],"sources":["./node_modules/@esri/calcite-components/dist/components/dom.js","./node_modules/@esri/calcite-components/dist/components/index.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js","./node_modules/@esri/arcgis-rest-form-data/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js","./node_modules/@esri/arcgis-rest-fetch/browser-ponyfill.js","./node_modules/@esri/arcgis-rest-request/dist/esm/request.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js","./node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/get-portal-url.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/SearchQueryBuilder.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/util/generic-search.js","./node_modules/@esri/arcgis-rest-portal/dist/esm/items/search.js","./src/components/hub-new-app/hub-new-app.css?tag=hub-new-app&encapsulation=shadow","./src/components/hub-new-app/hub-new-app.tsx"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { g as guid } from './guid.js';\n\nconst autoMode = \"calcite-mode-auto\";\nconst darkMode = \"calcite-mode-dark\";\nconst lightMode = \"calcite-mode-light\";\nconst CSS_UTILITY = {\n  autoMode,\n  darkMode,\n  lightMode,\n  rtl: \"calcite--rtl\"\n};\n\n/*!\n* tabbable 6.1.1\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode$1 = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\nvar getTabindex = function getTabindex(node, isScope) {\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    //\n    // isScope is positive for custom element with shadow root or slot that by default\n    // have tabIndex -1, but need to be sorted by document order in order for their\n    // content to be inserted in the correct position\n    if ((isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && isNaN(parseInt(node.getAttribute('tabindex'), 10))) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode$1(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode$1(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode$1(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode$1(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getTabindex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([el], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nconst tabbableOptions = {\n  getShadowRoot: true\n};\n/**\n * This helper will guarantee an ID on the provided element.\n *\n * If it already has an ID, it will be preserved, otherwise a unique one will be generated and assigned.\n *\n * @param el\n * @returns {string} The element's ID.\n */\nfunction ensureId(el) {\n  if (!el) {\n    return \"\";\n  }\n  return (el.id = el.id || `${el.tagName.toLowerCase()}-${guid()}`);\n}\nfunction nodeListToArray(nodeList) {\n  return Array.isArray(nodeList) ? nodeList : Array.from(nodeList);\n}\nfunction getModeName(el) {\n  const closestElWithMode = closestElementCrossShadowBoundary(el, `.${CSS_UTILITY.darkMode}, .${CSS_UTILITY.lightMode}`);\n  return closestElWithMode?.classList.contains(\"calcite-mode-dark\") ? \"dark\" : \"light\";\n}\nfunction getElementDir(el) {\n  const prop = \"dir\";\n  const selector = `[${prop}]`;\n  const closest = closestElementCrossShadowBoundary(el, selector);\n  return closest ? closest.getAttribute(prop) : \"ltr\";\n}\nfunction getElementProp(el, prop, fallbackValue) {\n  const selector = `[${prop}]`;\n  const closest = el.closest(selector);\n  return closest ? closest.getAttribute(prop) : fallbackValue;\n}\nfunction getRootNode(el) {\n  return el.getRootNode();\n}\nfunction getHost(root) {\n  return root.host || null;\n}\n/**\n * This helper queries an element's rootNode and any ancestor rootNodes.\n *\n * If both an 'id' and 'selector' are supplied, 'id' will take precedence over 'selector'.\n *\n * @param element\n * @param root0\n * @param root0.selector\n * @param root0.id\n * @returns {Element} The element.\n */\nfunction queryElementRoots(element, { selector, id }) {\n  // Gets the rootNode and any ancestor rootNodes (shadowRoot or document) of an element and queries them for a selector.\n  // Based on: https://stackoverflow.com/q/54520554/194216\n  function queryFrom(el) {\n    if (!el) {\n      return null;\n    }\n    if (el.assignedSlot) {\n      el = el.assignedSlot;\n    }\n    const rootNode = getRootNode(el);\n    const found = id\n      ? \"getElementById\" in rootNode\n        ? /*\n          Check to make sure 'getElementById' exists in cases where element is no longer connected to the DOM and getRootNode() returns the element.\n          https://github.com/Esri/calcite-components/pull/4280\n           */\n          rootNode.getElementById(id)\n        : null\n      : selector\n        ? rootNode.querySelector(selector)\n        : null;\n    const host = getHost(rootNode);\n    return found ? found : host ? queryFrom(host) : null;\n  }\n  return queryFrom(element);\n}\nfunction closestElementCrossShadowBoundary(element, selector) {\n  // based on https://stackoverflow.com/q/54520554/194216\n  function closestFrom(el) {\n    return el ? el.closest(selector) || closestFrom(getHost(getRootNode(el))) : null;\n  }\n  return closestFrom(element);\n}\n/**\n * This utility helps invoke a callback as it traverses a node and its ancestors until reaching the root document.\n *\n * Returning early or undefined in `onVisit` will continue traversing up the DOM tree. Otherwise, traversal will halt with the returned value as the result of the function\n *\n * @param element\n * @param onVisit\n */\nfunction walkUpAncestry(element, onVisit) {\n  return visit(element, onVisit);\n}\nfunction visit(node, onVisit) {\n  if (!node) {\n    return;\n  }\n  const result = onVisit(node);\n  if (result !== undefined) {\n    return result;\n  }\n  const { parentNode } = node;\n  return visit(parentNode instanceof ShadowRoot ? parentNode.host : parentNode, onVisit);\n}\nfunction containsCrossShadowBoundary(element, maybeDescendant) {\n  return !!walkUpAncestry(maybeDescendant, (node) => (node === element ? true : undefined));\n}\nfunction isCalciteFocusable(el) {\n  return typeof el?.setFocus === \"function\";\n}\nasync function focusElement(el) {\n  if (!el) {\n    return;\n  }\n  return isCalciteFocusable(el) ? el.setFocus() : el.focus();\n}\n/**\n * Helper to focus the first tabbable element.\n *\n * @param {HTMLElement} element The html element containing tabbable elements.\n */\nfunction focusFirstTabbable(element) {\n  if (!element) {\n    return;\n  }\n  (tabbable(element, tabbableOptions)[0] || element).focus();\n}\nconst defaultSlotSelector = \":not([slot])\";\nfunction getSlotted(element, slotName, options) {\n  if (slotName && !Array.isArray(slotName) && typeof slotName !== \"string\") {\n    options = slotName;\n    slotName = null;\n  }\n  const slotSelector = slotName\n    ? Array.isArray(slotName)\n      ? slotName.map((name) => `[slot=\"${name}\"]`).join(\",\")\n      : `[slot=\"${slotName}\"]`\n    : defaultSlotSelector;\n  if (options?.all) {\n    return queryMultiple(element, slotSelector, options);\n  }\n  return querySingle(element, slotSelector, options);\n}\nfunction getDirectChildren(el, selector) {\n  return el ? Array.from(el.children || []).filter((child) => child?.matches(selector)) : [];\n}\nfunction queryMultiple(element, slotSelector, options) {\n  let matches = slotSelector === defaultSlotSelector\n    ? getDirectChildren(element, defaultSlotSelector)\n    : Array.from(element.querySelectorAll(slotSelector));\n  matches = options && options.direct === false ? matches : matches.filter((el) => el.parentElement === element);\n  matches = options?.matches ? matches.filter((el) => el?.matches(options.matches)) : matches;\n  const selector = options?.selector;\n  return selector\n    ? matches\n      .map((item) => Array.from(item.querySelectorAll(selector)))\n      .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], [])\n      .filter((match) => !!match)\n    : matches;\n}\nfunction querySingle(element, slotSelector, options) {\n  let match = slotSelector === defaultSlotSelector\n    ? getDirectChildren(element, defaultSlotSelector)[0] || null\n    : element.querySelector(slotSelector);\n  match = options && options.direct === false ? match : match?.parentElement === element ? match : null;\n  match = options?.matches ? (match?.matches(options.matches) ? match : null) : match;\n  const selector = options?.selector;\n  return selector ? match?.querySelector(selector) : match;\n}\nfunction filterDirectChildren(el, selector) {\n  return Array.from(el.children).filter((child) => child.matches(selector));\n}\n// set a default icon from a defined set or allow an override with an icon name string\nfunction setRequestedIcon(iconObject, iconValue, matchedValue) {\n  if (typeof iconValue === \"string\" && iconValue !== \"\") {\n    return iconValue;\n  }\n  else if (iconValue === \"\") {\n    return iconObject[matchedValue];\n  }\n}\nfunction intersects(rect1, rect2) {\n  return !(rect2.left > rect1.right ||\n    rect2.right < rect1.left ||\n    rect2.top > rect1.bottom ||\n    rect2.bottom < rect1.top);\n}\n/**\n * This helper makes sure that boolean aria attributes are properly converted to a string.\n *\n * It should only be used for aria attributes that require a string value of \"true\" or \"false\".\n *\n * @param value\n * @returns {string} The string conversion of a boolean value (\"true\" | \"false\").\n */\nfunction toAriaBoolean(value) {\n  return Boolean(value).toString();\n}\n/**\n * This helper returns `true` if the target `slot` element from the `onSlotchange` event has an assigned element.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nfunction slotChangeHasAssignedElement(event) {\n  return !!slotChangeGetAssignedElements(event).length;\n}\n/**\n * This helper returns the assigned elements on a `slot` element from the `onSlotchange` event.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotElements = slotChangeGetAssignedElements(event)} />}\n * ```\n *\n * @param event\n * @returns {boolean} Whether the slot has any assigned elements.\n */\nfunction slotChangeGetAssignedElements(event) {\n  return event.target.assignedElements({\n    flatten: true\n  });\n}\n/**\n * This helper returns true if the pointer event fired from the primary button of the device.\n *\n * See https://www.w3.org/TR/pointerevents/#the-button-property.\n *\n * @param event\n * @returns {boolean}\n */\nfunction isPrimaryPointerButton(event) {\n  return !!(event.isPrimary && event.button === 0);\n}\nconst focusElementInGroup = (elements, currentElement, destination) => {\n  const currentIndex = elements.indexOf(currentElement);\n  const isFirstItem = currentIndex === 0;\n  const isLastItem = currentIndex === elements.length - 1;\n  destination =\n    destination === \"previous\" && isFirstItem ? \"last\" : destination === \"next\" && isLastItem ? \"first\" : destination;\n  let focusTarget;\n  switch (destination) {\n    case \"first\":\n      focusTarget = elements[0];\n      break;\n    case \"last\":\n      focusTarget = elements[elements.length - 1];\n      break;\n    case \"next\":\n      focusTarget = elements[currentIndex + 1] || elements[0];\n      break;\n    case \"previous\":\n      focusTarget = elements[currentIndex - 1] || elements[elements.length - 1];\n      break;\n  }\n  focusElement(focusTarget);\n  return focusTarget;\n};\n\nexport { tabbableOptions as A, CSS_UTILITY as C, autoMode as a, getSlotted as b, getElementDir as c, darkMode as d, setRequestedIcon as e, getModeName as f, getElementProp as g, focusElement as h, isPrimaryPointerButton as i, focusFirstTabbable as j, ensureId as k, slotChangeGetAssignedElements as l, intersects as m, focusElementInGroup as n, nodeListToArray as o, getRootNode as p, filterDirectChildren as q, closestElementCrossShadowBoundary as r, slotChangeHasAssignedElement as s, toAriaBoolean as t, queryElementRoots as u, containsCrossShadowBoundary as v, tabbable as w, focusable as x, isTabbable as y, isFocusable as z };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport { setAssetPath, setNonce, setPlatformOptions } from '@stencil/core/internal/client/index.js';\nimport { d as darkMode, a as autoMode } from './dom.js';\n\n/**\n * Emits when the mode is dynamically toggled between light and dark on <body> or in OS preferences.\n */\nfunction initModeChangeEvent() {\n  const { classList } = document.body;\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const getMode = () => classList.contains(darkMode) || (classList.contains(autoMode) && prefersDark) ? \"dark\" : \"light\";\n  const emitModeChange = (mode) => document.body.dispatchEvent(new CustomEvent(\"calciteModeChange\", { bubbles: true, detail: { mode } }));\n  const modeChangeHandler = (newMode) => {\n    currentMode !== newMode && emitModeChange(newMode);\n    currentMode = newMode;\n  };\n  let currentMode = getMode();\n  // emits event on page load\n  emitModeChange(currentMode);\n  // emits event when changing OS mode preferences\n  window\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", (event) => modeChangeHandler(event.matches ? \"dark\" : \"light\"));\n  // emits event when toggling between mode classes on <body>\n  new MutationObserver(() => modeChangeHandler(getMode())).observe(document.body, {\n    attributes: true,\n    attributeFilter: [\"class\"]\n  });\n}\n\n/**\n * This file is imported in Stencil's `globalScript` config option.\n *\n * @see {@link https://stenciljs.com/docs/config#globalscript}\n */\nfunction appGlobalScript () {\n  const isBrowser = typeof window !== \"undefined\" &&\n    typeof location !== \"undefined\" &&\n    typeof document !== \"undefined\" &&\n    window.location === location &&\n    window.document === document;\n  if (isBrowser) {\n    if (document.readyState === \"interactive\") {\n      initModeChangeEvent();\n    }\n    else {\n      document.addEventListener(\"DOMContentLoaded\", () => initModeChangeEvent(), { once: true });\n    }\n  }\n}\n\nconst globalScripts = appGlobalScript;\n\nglobalScripts();\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params) {\n    return Object.keys(params).some((key) => {\n        let value = params[key];\n        if (!value) {\n            return false;\n        }\n        if (value && value.toParam) {\n            value = value.toParam();\n        }\n        const type = value.constructor.name;\n        switch (type) {\n            case \"Array\":\n                return false;\n            case \"Object\":\n                return false;\n            case \"Date\":\n                return false;\n            case \"Function\":\n                return false;\n            case \"Boolean\":\n                return false;\n            case \"String\":\n                return false;\n            case \"Number\":\n                return false;\n            default:\n                return true;\n        }\n    });\n}\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params) {\n    const newParams = {};\n    Object.keys(params).forEach((key) => {\n        var _a, _b;\n        let param = params[key];\n        if (param && param.toParam) {\n            param = param.toParam();\n        }\n        if (!param &&\n            param !== 0 &&\n            typeof param !== \"boolean\" &&\n            typeof param !== \"string\") {\n            return;\n        }\n        const type = param.constructor.name;\n        let value;\n        // properly encodes objects, arrays and dates for arcgis.com and other services.\n        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n        // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n        switch (type) {\n            case \"Array\":\n                // Based on the first element of the array, classify array as an array of arrays, an array of objects\n                // to be stringified, or an array of non-objects to be comma-separated\n                // eslint-disable-next-line no-case-declarations\n                const firstElementType = (_b = (_a = param[0]) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name;\n                value =\n                    firstElementType === \"Array\"\n                        ? param // pass thru array of arrays\n                        : firstElementType === \"Object\"\n                            ? JSON.stringify(param) // stringify array of objects\n                            : param.join(\",\"); // join other types of array elements\n                break;\n            case \"Object\":\n                value = JSON.stringify(param);\n                break;\n            case \"Date\":\n                value = param.valueOf();\n                break;\n            case \"Function\":\n                value = null;\n                break;\n            case \"Boolean\":\n                value = param + \"\";\n                break;\n            default:\n                value = param;\n                break;\n        }\n        if (value ||\n            value === 0 ||\n            typeof value === \"string\" ||\n            Array.isArray(value)) {\n            newParams[key] = value;\n        }\n    });\n    return newParams;\n}\n//# sourceMappingURL=process-params.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams } from \"./process-params.js\";\n/**\n * Encodes keys and parameters for use in a URL's query string.\n *\n * @param key Parameter's key\n * @param value Parameter's value\n * @returns Query string with key and value pairs separated by \"&\"\n */\nexport function encodeParam(key, value) {\n    // For array of arrays, repeat key=value for each element of containing array\n    if (Array.isArray(value) && value[0] && Array.isArray(value[0])) {\n        return value\n            .map((arrayElem) => encodeParam(key, arrayElem))\n            .join(\"&\");\n    }\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nexport function encodeQueryString(params) {\n    const newParams = processParams(params);\n    return Object.keys(newParams)\n        .map((key) => {\n        return encodeParam(key, newParams[key]);\n    })\n        .join(\"&\");\n}\n//# sourceMappingURL=encode-query-string.js.map","module.exports = {\n  FormData: globalThis.FormData,\n  File: globalThis.File,\n  Blob: globalThis.Blob\n};\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams, requiresFormData } from \"./process-params.js\";\nimport { encodeQueryString } from \"./encode-query-string.js\";\nimport { FormData } from \"@esri/arcgis-rest-form-data\";\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nexport function encodeFormData(params, forceFormData) {\n    // see https://github.com/Esri/arcgis-rest-js/issues/499 for more info.\n    const useFormData = requiresFormData(params) || forceFormData;\n    const newParams = processParams(params);\n    if (useFormData) {\n        const formData = new FormData();\n        Object.keys(newParams).forEach((key) => {\n            if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n                /* To name the Blob:\n                 1. look to an alternate request parameter called 'fileName'\n                 2. see if 'name' has been tacked onto the Blob manually\n                 3. if all else fails, use the request parameter\n                */\n                const filename = newParams[\"fileName\"] || newParams[key].name || key;\n                formData.append(key, newParams[key], filename);\n            }\n            else {\n                formData.append(key, newParams[key]);\n            }\n        });\n        return formData;\n    }\n    else {\n        return encodeQueryString(params);\n    }\n}\n//# sourceMappingURL=encode-form-data.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * This represents a generic error from an ArcGIS endpoint. There will be details about the error in the {@linkcode ArcGISRequestError.message},  {@linkcode ArcGISRequestError.originalMessage} properties on the error. You\n * can also access the original server response at  {@linkcode ArcGISRequestError.response} which may have additional details.\n *\n * ```js\n * request(someUrl, someOptions).catch(e => {\n *   if(e.name === \"ArcGISRequestError\") {\n *     console.log(\"Something went wrong with the request:\", e);\n *     console.log(\"Full server response\", e.response);\n *   }\n * })\n * ```\n */\nexport class ArcGISRequestError extends Error {\n    /**\n     * Create a new `ArcGISRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    constructor(message, code, response, url, options) {\n        // 'Error' breaks prototype chain here\n        super(message);\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n        message = message || \"UNKNOWN_ERROR\";\n        code = code || \"UNKNOWN_ERROR_CODE\";\n        this.name = \"ArcGISRequestError\";\n        this.message =\n            code === \"UNKNOWN_ERROR_CODE\" ? message : `${code}: ${message}`;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=ArcGISRequestError.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nexport function warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n//# sourceMappingURL=warn.js.map","module.exports.getFetch = function getFetch() {\n  return Promise.resolve({\n    fetch: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Response: globalThis.Response,\n    Request: globalThis.request\n  });\n};\n","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { encodeFormData } from \"./utils/encode-form-data.js\";\nimport { encodeQueryString } from \"./utils/encode-query-string.js\";\nimport { requiresFormData } from \"./utils/process-params.js\";\nimport { ArcGISRequestError } from \"./utils/ArcGISRequestError.js\";\nimport { warn } from \"./utils/warn.js\";\nimport { getFetch } from \"@esri/arcgis-rest-fetch\";\nexport const NODEJS_DEFAULT_REFERER_HEADER = `@esri/arcgis-rest-js`;\n/**\n * Sets the default options that will be passed in **all requests across all `@esri/arcgis-rest-js` modules**.\n *\n * ```js\n * import { setDefaultRequestOptions } from \"@esri/arcgis-rest-request\";\n *\n * setDefaultRequestOptions({\n *   authentication: ArcGISIdentityManager // all requests will use this session by default\n * })\n * ```\n *\n * You should **never** set a default `authentication` when you are in a server side environment where you may be handling requests for many different authenticated users.\n *\n * @param options The default options to pass with every request. Existing default will be overwritten.\n * @param hideWarnings Silence warnings about setting default `authentication` in shared environments.\n */\nexport function setDefaultRequestOptions(options, hideWarnings) {\n    if (options.authentication && !hideWarnings) {\n        warn(\"You should not set `authentication` as a default in a shared environment such as a web server which will process multiple users requests. You can call `setDefaultRequestOptions` with `true` as a second argument to disable this warning.\");\n    }\n    globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS = options;\n}\nexport function getDefaultRequestOptions() {\n    return (globalThis.DEFAULT_ARCGIS_REQUEST_OPTIONS || {\n        httpMethod: \"POST\",\n        params: {\n            f: \"json\"\n        }\n    });\n}\n/**\n * This error is thrown when a request encounters an invalid token error. Requests that use {@linkcode ArcGISIdentityManager} or\n * {@linkcode ApplicationCredentialsManager} in the `authentication` option the authentication manager will automatically try to generate\n * a fresh token using either {@linkcode ArcGISIdentityManager.refreshCredentials} or\n * {@linkcode ApplicationCredentialsManager.refreshCredentials}. If the request with the new token fails you will receive an `ArcGISAuthError`\n * if refreshing the token fails you will receive an instance of {@linkcode ArcGISTokenRequestError}.\n *\n * ```js\n * request(someUrl, {\n *   authentication: identityManager,\n *   // some additional options...\n * }).catch(e => {\n *   if(e.name === \"ArcGISAuthError\") {\n *     console.log(\"Request with a new token failed you might want to have the user authorize again.\")\n *   }\n *\n *   if(e.name === \"ArcGISTokenRequestError\") {\n *     console.log(\"There was an error refreshing the token you might want to have the user authorize again.\")\n *   }\n * })\n * ```\n */\nexport class ArcGISAuthError extends ArcGISRequestError {\n    /**\n     * Create a new `ArcGISAuthError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options of the request\n     */\n    constructor(message = \"AUTHENTICATION_ERROR\", code = \"AUTHENTICATION_ERROR_CODE\", response, url, options) {\n        super(message, code, response, url, options);\n        this.name = \"ArcGISAuthError\";\n        this.message =\n            code === \"AUTHENTICATION_ERROR_CODE\" ? message : `${code}: ${message}`;\n        // restore prototype chain, see https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n        // we don't need to check for Object.setPrototypeOf as in the answers because we are ES2017 now.\n        // Also see https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        // and https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#custom_error_types\n        const actualProto = new.target.prototype;\n        Object.setPrototypeOf(this, actualProto);\n    }\n    retry(getSession, retryLimit = 1) {\n        let tries = 0;\n        const retryRequest = (resolve, reject) => {\n            tries = tries + 1;\n            getSession(this.url, this.options)\n                .then((session) => {\n                const newOptions = Object.assign(Object.assign({}, this.options), { authentication: session });\n                return internalRequest(this.url, newOptions);\n            })\n                .then((response) => {\n                resolve(response);\n            })\n                .catch((e) => {\n                if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n                    retryRequest(resolve, reject);\n                }\n                else if (e.name === this.name &&\n                    e.message === this.message &&\n                    tries >= retryLimit) {\n                    reject(this);\n                }\n                else {\n                    reject(e);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            retryRequest(resolve, reject);\n        });\n    }\n}\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nexport function checkForErrors(response, url, params, options, originalAuthError) {\n    // this is an error message from billing.arcgis.com backend\n    if (response.code >= 400) {\n        const { message, code } = response;\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    // error from ArcGIS Online or an ArcGIS Portal or server instance.\n    if (response.error) {\n        const { message, code, messageCode } = response.error;\n        const errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n        if (code === 498 || code === 499) {\n            if (originalAuthError) {\n                throw originalAuthError;\n            }\n            else {\n                throw new ArcGISAuthError(message, errorCode, response, url, options);\n            }\n        }\n        throw new ArcGISRequestError(message, errorCode, response, url, options);\n    }\n    // error from a status check\n    if (response.status === \"failed\" || response.status === \"failure\") {\n        let message;\n        let code = \"UNKNOWN_ERROR_CODE\";\n        try {\n            message = JSON.parse(response.statusMessage).message;\n            code = JSON.parse(response.statusMessage).code;\n        }\n        catch (e) {\n            message = response.statusMessage || response.message;\n        }\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    return response;\n}\n/**\n * This is the internal implementation of `request` without the automatic retry behavior to prevent\n * infinite loops when a server continues to return invalid token errors.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n * @internal\n */\nexport function internalRequest(url, requestOptions) {\n    const defaults = getDefaultRequestOptions();\n    const options = Object.assign(Object.assign(Object.assign({ httpMethod: \"POST\" }, defaults), requestOptions), {\n        params: Object.assign(Object.assign({}, defaults.params), requestOptions.params),\n        headers: Object.assign(Object.assign({}, defaults.headers), requestOptions.headers)\n    });\n    const { httpMethod, rawResponse } = options;\n    const params = Object.assign({ f: \"json\" }, options.params);\n    let originalAuthError = null;\n    const fetchOptions = {\n        method: httpMethod,\n        signal: options.signal,\n        /* ensures behavior mimics XMLHttpRequest.\n        needed to support sending IWA cookies */\n        credentials: options.credentials || \"same-origin\"\n    };\n    // the /oauth2/platformSelf route will add X-Esri-Auth-Client-Id header\n    // and that request needs to send cookies cross domain\n    // so we need to set the credentials to \"include\"\n    if (options.headers &&\n        options.headers[\"X-Esri-Auth-Client-Id\"] &&\n        url.indexOf(\"/oauth2/platformSelf\") > -1) {\n        fetchOptions.credentials = \"include\";\n    }\n    let authentication;\n    // Check to see if this is a raw token as a string and create a IAuthenticationManager like object for it.\n    // Otherwise this just assumes that options.authentication is an IAuthenticationManager.\n    if (typeof options.authentication === \"string\") {\n        const rawToken = options.authentication;\n        authentication = {\n            portal: \"https://www.arcgis.com/sharing/rest\",\n            getToken: () => {\n                return Promise.resolve(rawToken);\n            }\n        };\n        /* istanbul ignore else - we don't need to test NOT warning people */\n        if (!options.authentication.startsWith(\"AAPK\") && // doesn't look like an API Key\n            !options.suppressWarnings && // user doesn't want to suppress warnings for this request\n            !globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING // we havn't shown the user this warning yet\n        ) {\n            warn(`Using an oAuth 2.0 access token directly in the token option is discouraged. Consider using ArcGISIdentityManager or Application session. See https://esriurl.com/arcgis-rest-js-direct-token-warning for more information.`);\n            globalThis.ARCGIS_REST_JS_SUPPRESS_TOKEN_WARNING = true;\n        }\n    }\n    else {\n        authentication = options.authentication;\n    }\n    // for errors in GET requests we want the URL passed to the error to be the URL before\n    // query params are applied.\n    const originalUrl = url;\n    return (authentication\n        ? authentication.getToken(url).catch((err) => {\n            /**\n             * append original request url and requestOptions\n             * to the error thrown by getToken()\n             * to assist with retrying\n             */\n            err.url = url;\n            err.options = options;\n            /**\n             * if an attempt is made to talk to an unfederated server\n             * first try the request anonymously. if a 'token required'\n             * error is thrown, throw the UNFEDERATED error then.\n             */\n            originalAuthError = err;\n            return Promise.resolve(\"\");\n        })\n        : Promise.resolve(\"\"))\n        .then((token) => {\n        if (token.length) {\n            params.token = token;\n        }\n        if (authentication && authentication.getDomainCredentials) {\n            fetchOptions.credentials = authentication.getDomainCredentials(url);\n        }\n        // Custom headers to add to request. IRequestOptions.headers with merge over requestHeaders.\n        const requestHeaders = {};\n        if (fetchOptions.method === \"GET\") {\n            // Prevents token from being passed in query params when hideToken option is used.\n            /* istanbul ignore if - window is always defined in a browser. Test case is covered by Jasmine in node test */\n            if (params.token &&\n                options.hideToken &&\n                // Sharing API does not support preflight check required by modern browsers https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request\n                typeof window === \"undefined\") {\n                requestHeaders[\"X-Esri-Authorization\"] = `Bearer ${params.token}`;\n                delete params.token;\n            }\n            // encode the parameters into the query string\n            const queryParams = encodeQueryString(params);\n            // dont append a '?' unless parameters are actually present\n            const urlWithQueryString = queryParams === \"\" ? url : url + \"?\" + encodeQueryString(params);\n            if (\n            // This would exceed the maximum length for URLs specified by the consumer and requires POST\n            (options.maxUrlLength &&\n                urlWithQueryString.length > options.maxUrlLength) ||\n                // Or if the customer requires the token to be hidden and it has not already been hidden in the header (for browsers)\n                (params.token && options.hideToken)) {\n                // the consumer specified a maximum length for URLs\n                // and this would exceed it, so use post instead\n                fetchOptions.method = \"POST\";\n                // If the token was already added as a Auth header, add the token back to body with other params instead of header\n                if (token.length && options.hideToken) {\n                    params.token = token;\n                    // Remove existing header that was added before url query length was checked\n                    delete requestHeaders[\"X-Esri-Authorization\"];\n                }\n            }\n            else {\n                // just use GET\n                url = urlWithQueryString;\n            }\n        }\n        /* updateResources currently requires FormData even when the input parameters dont warrant it.\n    https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm\n        see https://github.com/Esri/arcgis-rest-js/pull/500 for more info. */\n        const forceFormData = new RegExp(\"/items/.+/updateResources\").test(url);\n        if (fetchOptions.method === \"POST\") {\n            fetchOptions.body = encodeFormData(params, forceFormData);\n        }\n        // Mixin headers from request options\n        fetchOptions.headers = Object.assign(Object.assign({}, requestHeaders), options.headers);\n        // This should have the same conditional for Node JS as ArcGISIdentityManager.refreshWithUsernameAndPassword()\n        // to ensure that generated tokens have the same referer when used in Node with a username and password.\n        /* istanbul ignore next - karma reports coverage on browser tests only */\n        if ((typeof window === \"undefined\" ||\n            (window && typeof window.document === \"undefined\")) &&\n            !fetchOptions.headers.referer) {\n            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n        }\n        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n        if (!requiresFormData(params) && !forceFormData) {\n            fetchOptions.headers[\"Content-Type\"] =\n                \"application/x-www-form-urlencoded\";\n        }\n        /**\n         * Check for a global fetch first and use it if available. This allows us to use the default\n         * configuration of fetch-mock in tests.\n         */\n        /* istanbul ignore next coverage is based on browser code and we don't test for the absence of global fetch so we can skip the else here. */\n        return globalThis.fetch\n            ? globalThis.fetch(url, fetchOptions)\n            : getFetch().then(({ fetch }) => {\n                return fetch(url, fetchOptions);\n            });\n    })\n        .then((response) => {\n        // the request got back an error status code (4xx, 5xx)\n        if (!response.ok) {\n            // we need to determine if the server returned a JSON body with more details.\n            // this is the format used by newer services such as the Places and Style service.\n            return response\n                .json()\n                .then((jsonError) => {\n                // The body can be parsed as JSON\n                const { status, statusText } = response;\n                const { message, details } = jsonError.error;\n                const formattedMessage = `${message}. ${details ? details.join(\" \") : \"\"}`.trim();\n                throw new ArcGISRequestError(formattedMessage, `HTTP ${status} ${statusText}`, jsonError, url, options);\n            })\n                .catch((e) => {\n                // if we already were about to format this as an ArcGISRequestError throw that error\n                if (e.name === \"ArcGISRequestError\") {\n                    throw e;\n                }\n                // server responded w/ an actual error (404, 500, etc) but we could not parse it as JSON\n                const { status, statusText } = response;\n                throw new ArcGISRequestError(statusText, `HTTP ${status}`, response, url, options);\n            });\n        }\n        if (rawResponse) {\n            return response;\n        }\n        switch (params.f) {\n            case \"json\":\n                return response.json();\n            case \"geojson\":\n                return response.json();\n            case \"html\":\n                return response.text();\n            case \"text\":\n                return response.text();\n            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n            default:\n                return response.blob();\n        }\n    })\n        .then((data) => {\n        // Check for an error in the JSON body of a successful response.\n        // Most ArcGIS Server services will return a successful status code but include an error in the response body.\n        if ((params.f === \"json\" || params.f === \"geojson\") && !rawResponse) {\n            const response = checkForErrors(data, originalUrl, params, options, originalAuthError);\n            if (originalAuthError) {\n                /* If the request was made to an unfederated service that\n                didn't require authentication, add the base url and a dummy token\n                to the list of trusted servers to avoid another federation check\n                in the event of a repeat request */\n                const truncatedUrl = url\n                    .toLowerCase()\n                    .split(/\\/rest(\\/admin)?\\/services\\//)[0];\n                options.authentication.federatedServers[truncatedUrl] = {\n                    token: [],\n                    // default to 24 hours\n                    expires: new Date(Date.now() + 86400 * 1000)\n                };\n                originalAuthError = null;\n            }\n            return response;\n        }\n        else {\n            return data;\n        }\n    });\n}\n/**\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n *\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n *\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n *\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function request(url, requestOptions = { params: { f: \"json\" } }) {\n    return internalRequest(url, requestOptions).catch((e) => {\n        if (e instanceof ArcGISAuthError &&\n            requestOptions.authentication &&\n            typeof requestOptions.authentication !== \"string\" &&\n            requestOptions.authentication.canRefresh &&\n            requestOptions.authentication.refreshCredentials) {\n            return e.retry(() => {\n                return requestOptions.authentication.refreshCredentials();\n            }, 1);\n        }\n        else {\n            return Promise.reject(e);\n        }\n    });\n}\n//# sourceMappingURL=request.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nexport function appendCustomParams(customOptions, keys, baseOptions) {\n    const requestOptionsKeys = [\n        \"params\",\n        \"httpMethod\",\n        \"rawResponse\",\n        \"authentication\",\n        \"portal\",\n        \"fetch\",\n        \"maxUrlLength\",\n        \"headers\"\n    ];\n    const options = Object.assign(Object.assign({ params: {} }, baseOptions), customOptions);\n    // merge all keys in customOptions into options.params\n    options.params = keys.reduce((value, key) => {\n        if (customOptions[key] ||\n            typeof customOptions[key] === \"boolean\" ||\n            (typeof customOptions[key] === \"number\" &&\n                customOptions[key] === 0)) {\n            value[key] = customOptions[key];\n        }\n        return value;\n    }, options.params);\n    // now remove all properties in options that don't exist in IRequestOptions\n    return requestOptionsKeys.reduce((value, key) => {\n        if (options[key]) {\n            value[key] = options[key];\n        }\n        return value;\n    }, {});\n}\n//# sourceMappingURL=append-custom-params.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nexport function cleanUrl(url) {\n    // Guard so we don't try to trim something that's not a string\n    if (typeof url !== \"string\") {\n        return url;\n    }\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n//# sourceMappingURL=clean-url.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { cleanUrl } from \"@esri/arcgis-rest-request\";\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither `portal` nor `authentication` is present,\n * `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nexport function getPortalUrl(requestOptions = {}) {\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return cleanUrl(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication &&\n        typeof requestOptions.authentication !== \"string\") {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n//# sourceMappingURL=get-portal-url.js.map","/* Copyright (c) 2018-2021 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { warn } from \"@esri/arcgis-rest-request\";\n/**\n * `SearchQueryBuilder` can be used to construct the `q` param for {@linkcode searchItems} or {@linkcode searchGroups}.\n *\n * By chaining methods, it helps build complex search queries.\n *\n * ```js\n * const startDate = new Date(\"2020-01-01\");\n * const endDate = new Date(\"2020-09-01\");\n * const query = new SearchQueryBuilder()\n *  .match(\"Patrick\")\n *  .in(\"owner\")\n *  .and()\n *  .from(startDate)\n *  .to(endDate)\n *  .in(\"created\")\n *  .and()\n *  .startGroup()\n *    .match(\"Web Mapping Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Mobile Application\")\n *    .in(\"type\")\n *    .or()\n *    .match(\"Application\")\n *    .in(\"type\")\n *  .endGroup()\n *  .and()\n *  .match(\"Demo App\");\n *\n * searchItems(query).then((res) => {\n *   console.log(res.results);\n * });\n * ```\n *\n * Will search for items matching\n * ```\n * \"owner: Patrick AND created:[1577836800000 TO 1598918400000] AND (type:\"Web Mapping Application\" OR type:\"Mobile Application\" OR type:Application) AND Demo App\"\n * ```\n */\nexport class SearchQueryBuilder {\n    /**\n     * @param q An existing query string to start building from.\n     */\n    constructor(q = \"\") {\n        this.termStack = [];\n        this.rangeStack = [];\n        this.openGroups = 0;\n        this.q = q;\n    }\n    /**\n     * Defines strings to search for.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     * ```\n     *\n     * @param terms strings to search for.\n     */\n    match(...terms) {\n        this.termStack = this.termStack.concat(terms);\n        return this;\n    }\n    /**\n     * Defines fields to search in. You can pass `\"*\"` or call this method without arguments to search a default set of fields\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"My Layer\")\n     *   .in(\"title\")\n     * ```\n     *\n     * @param field The field to search for the previous match in.\n     */\n    in(field) {\n        const fn = `\\`in(${field ? `\"${field}\"` : \"\"})\\``;\n        if (!this.hasRange && !this.hasTerms) {\n            warn(\n            // apparently-p-rettier-ignore causes some\n            `${fn} was called with no call to \\`match(...)\\` or \\`from(...)\\`/\\`to(...)\\`. Your query was not modified.`);\n            return this;\n        }\n        if (field && field !== \"*\") {\n            this.q += `${field}:`;\n        }\n        return this.commit();\n    }\n    /**\n     * Starts a new search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    startGroup() {\n        this.commit();\n        if (this.openGroups > 0) {\n            this.q += \" \";\n        }\n        this.openGroups++;\n        this.q += \"(\";\n        return this;\n    }\n    /**\n     * Ends a search group.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .startGroup()\n     *     .match(\"Lakes\")\n     *     .in(\"title\")\n     *   .endGroup()\n     *   .or()\n     *   .startGroup()\n     *     .match(\"Rivers\")\n     *     .in(\"title\")\n     *   .endGroup()\n     * ```\n     */\n    endGroup() {\n        if (this.openGroups <= 0) {\n            warn(`\\`endGroup(...)\\` was called without calling \\`startGroup(...)\\` first. Your query was not modified.`);\n            return this;\n        }\n        this.commit();\n        this.openGroups--;\n        this.q += \")\";\n        return this;\n    }\n    /**\n     * Joins two sets of queries with an `AND` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .and()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    and() {\n        return this.addModifier(\"and\");\n    }\n    /**\n     * Joins two sets of queries with an `OR` clause.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     * ```\n     */\n    or() {\n        return this.addModifier(\"or\");\n    }\n    /**\n     * Joins two sets of queries with a `NOT` clause. Another option for filtering results is the [prohibit operator '-'](https://developers.arcgis.com/rest/users-groups-and-items/search-reference.htm#ESRI_SECTION1_5C6C35DB9E4A4F4492C5B937BDA2BF67).\n     *\n     * ```js\n     * // omit results with \"Rivers\" in their title\n     * const query = new SearchQueryBuilder()\n     *   .not()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *\n     * // equivalent\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Rivers\")\n     *   .in(\"-title\")\n     * ```\n     */\n    not() {\n        return this.addModifier(\"not\");\n    }\n    /**\n     * Begins a new range query.\n     *\n     * ```js\n     *\n     * const NEWYEARS = new Date(\"2020-01-01\")\n     * const TODAY = new Date()\n     *\n     * const query = new SearchQueryBuilder()\n     *   .from(NEWYEARS)\n     *   .to(TODAY)\n     *   .in(\"created\")\n     * ```\n     */\n    from(term) {\n        if (this.hasTerms) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `\\`from(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\").  Your query was not modified.`);\n            return this;\n        }\n        this.rangeStack[0] = term;\n        return this;\n    }\n    /**\n     * Ends a range query.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .from(yesterdaysDate)\n     *   .to(todaysDate)\n     *   .in(\"created\")\n     * ```\n     */\n    to(term) {\n        if (this.hasTerms) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `\\`to(...)\\` is not allowed after \\`match(...)\\` try using \\`.from(...).to(...).in(...)\\`. Optionally, you may see this because dates are incorrectly formatted. Dates should be a primative Date value, aka a number in milliseconds or Date object, ie new Date(\"2020-01-01\"). Your query was not modified.`);\n            return this;\n        }\n        this.rangeStack[1] = term;\n        return this;\n    }\n    /**\n     * Boosts the previous term to increase its rank in the results.\n     *\n     * ```js\n     * const query = new SearchQueryBuilder()\n     *   .match(\"Lakes\")\n     *   .in(\"title\")\n     *   .or()\n     *   .match(\"Rivers\")\n     *   .in(\"title\")\n     *   .boost(3)\n     * ```\n     */\n    boost(num) {\n        this.commit();\n        this.q += `^${num}`;\n        return this;\n    }\n    /**\n     * Returns the current query string. Called internally when the request is made.\n     */\n    toParam() {\n        this.commit();\n        this.cleanup();\n        return this.q;\n    }\n    /**\n     * Returns a new instance of `SearchQueryBuilder` based on the current instance.\n     */\n    clone() {\n        this.commit();\n        this.cleanup();\n        return new SearchQueryBuilder(this.q + \"\");\n    }\n    addModifier(modifier) {\n        if (this.currentModifer) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `You have called \\`${this.currentModifer}()\\` after \\`${modifier}()\\`. Your current query was not modified.`);\n            return this;\n        }\n        this.commit();\n        if (this.q === \"\" && modifier !== \"not\") {\n            warn(`You have called \\`${modifier}()\\` without calling another method to modify your query first. Try calling \\`match()\\` first.`);\n            return this;\n        }\n        this.currentModifer = modifier;\n        this.q += this.q === \"\" ? \"\" : \" \";\n        this.q += `${modifier.toUpperCase()} `;\n        return this;\n    }\n    hasWhiteSpace(s) {\n        return /\\s/g.test(s);\n    }\n    formatTerm(term) {\n        if (term instanceof Date) {\n            return term.getTime();\n        }\n        if (typeof term === \"string\" && this.hasWhiteSpace(term)) {\n            return `\"${term}\"`;\n        }\n        return term;\n    }\n    commit() {\n        this.currentModifer = undefined;\n        if (this.hasRange) {\n            this.q += `[${this.formatTerm(this.rangeStack[0])} TO ${this.formatTerm(this.rangeStack[1])}]`;\n            this.rangeStack = [undefined, undefined];\n        }\n        if (this.hasTerms) {\n            this.q += this.termStack\n                .map((term) => {\n                return this.formatTerm(term);\n            })\n                .join(\" \");\n            this.termStack = [];\n        }\n        return this;\n    }\n    get hasTerms() {\n        return this.termStack.length > 0;\n    }\n    get hasRange() {\n        return this.rangeStack.length && this.rangeStack[0] && this.rangeStack[1];\n    }\n    cleanup() {\n        // end a group if we have started one\n        if (this.openGroups > 0) {\n            warn(\n            // apparently-p*rettier-ignore causes prettier to strip *all* comments O_o\n            `Automatically closing ${this.openGroups} group(s). You can use \\`endGroup(...)\\` to remove this warning.`);\n            while (this.openGroups > 0) {\n                this.q += \")\";\n                this.openGroups--;\n            }\n        }\n        const oldQ = this.q;\n        this.q = oldQ.replace(/( AND ?| NOT ?| OR ?)*$/, \"\");\n        if (oldQ !== this.q) {\n            warn(`\\`startGroup(...)\\` was called without calling \\`endGroup(...)\\` first. Your query was not modified.`);\n        }\n        // clear empty groups\n        this.q = this.q.replace(/(\\(\\))*/, \"\");\n    }\n}\n//# sourceMappingURL=SearchQueryBuilder.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, appendCustomParams } from \"@esri/arcgis-rest-request\";\nimport { SearchQueryBuilder } from \"./SearchQueryBuilder.js\";\nimport { getPortalUrl } from \"../util/get-portal-url.js\";\nexport function genericSearch(search, searchType) {\n    let options;\n    if (typeof search === \"string\" || search instanceof SearchQueryBuilder) {\n        options = {\n            httpMethod: \"GET\",\n            params: {\n                q: search\n            }\n        };\n    }\n    else {\n        // searchUserAccess has one (known) valid value: \"groupMember\"\n        options = appendCustomParams(search, [\n            \"q\",\n            \"num\",\n            \"start\",\n            \"sortField\",\n            \"sortOrder\",\n            \"searchUserAccess\",\n            \"searchUserName\",\n            \"filter\",\n            \"countFields\",\n            \"countSize\",\n            \"categories\",\n            \"categoryFilters\"\n        ], {\n            httpMethod: \"GET\"\n        });\n    }\n    let path;\n    switch (searchType) {\n        case \"item\":\n            path = \"/search\";\n            break;\n        case \"group\":\n            path = \"/community/groups\";\n            break;\n        case \"groupContent\":\n            // Need to have groupId property to do group contents search,\n            // cso filter out all but ISearchGroupContentOptions\n            if (typeof search !== \"string\" &&\n                !(search instanceof SearchQueryBuilder) &&\n                search.groupId) {\n                path = `/content/groups/${search.groupId}/search`;\n            }\n            else {\n                return Promise.reject(new Error(\"you must pass a `groupId` option to `searchGroupContent`\"));\n            }\n            break;\n        default:\n            // \"users\"\n            path = \"/portals/self/users/search\";\n            break;\n    }\n    const url = getPortalUrl(options) + path;\n    // send the request\n    return request(url, options).then((r) => {\n        if (r.nextStart && r.nextStart !== -1) {\n            r.nextPage = function () {\n                let newOptions;\n                if (typeof search === \"string\" ||\n                    search instanceof SearchQueryBuilder) {\n                    newOptions = {\n                        q: search,\n                        start: r.nextStart\n                    };\n                }\n                else {\n                    newOptions = search;\n                    newOptions.start = r.nextStart;\n                }\n                return genericSearch(newOptions, searchType);\n            };\n        }\n        return r;\n    });\n}\n//# sourceMappingURL=generic-search.js.map","/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { genericSearch } from \"../util/generic-search.js\";\n/**\n * Search a portal for items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) for more information.\n *\n * ```js\n * import { searchItems } from \"@esri/arcgis-rest-portal\";\n *\n * searchItems('water')\n *   .then(response) // response.total => 355\n * ```\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchItems(search) {\n    return genericSearch(search, \"item\");\n}\n//# sourceMappingURL=search.js.map",":host {\n  display: block;\n}\n.new-options {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n  row-gap: 20px;;\n}\n\n#content {\n  height: 50vh;\n}\n.app {\n  margin: 10px;\n}\n.app calcite-button {\n  padding-left: 5px;\n}","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { setAssetPath } from \"@esri/calcite-components/dist/components\";\nimport { searchItems, SearchQueryBuilder } from \"@esri/arcgis-rest-portal\";\n\nsetAssetPath(\"https://js.arcgis.com/calcite-components/1.4.3/assets\");\n\n@Component({\n  tag: 'hub-new-app',\n  styleUrl: 'hub-new-app.css',\n  shadow: true,\n})\nexport class HubNewApp {\n\n  @Prop() username: string = 'aturner';\n  modal: HTMLCalciteModalElement;\n  // private shellPanelEl:HTMLCalciteShellPanelElement;\n  @State() newAppSelected:boolean = false;\n\n  @State() newAppTimestamp: Date = null;\n  @State() existingItems = [];\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <calcite-modal\n          id=\"modal\"\n          scale=\"m\"\n          width=\"m\"\n          ref={(el) => this.modal = el as HTMLCalciteModalElement}\n        >\n          <div slot=\"header\">\n            Create a new Application\n          </div>\n          <div id=\"content\" slot=\"content\">\n            \n            {this.renderContent()}\n\n          </div>\n        </calcite-modal>\n        {this.renderNewButton()}\n      </Host>\n    );\n  }\n  openModal() {\n    this.modal.open = true;\n  }\n\n  componentWillLoad() {\n    this.checkforExistingContent();\n\n    setInterval(() => {\n      this.checkforExistingContent();\n    }, 5000);\n    setInterval(() => {\n      this.checkForNewContent();\n    }, 1000);\n  }\n  async checkforExistingContent() {\n\n    // Existing Apps\n\n    const query = new SearchQueryBuilder()            \n          .match(this.username).in(\"owner\")\n          .and()\n          .startGroup()\n          // TODO enumerate over all builders\n            .match(\"StoryMap\").in(\"type\")\n            .or()\n            .match(\"Dashboard\").in(\"type\")\n            .or()\n            .match(\"Web Mapping Application\").in(\"type\")\n          .endGroup()\n\n    await searchItems({\n      q: query,\n      sortOrder: \"desc\",\n      sortField: \"created\"\n    }).then((response) => {\n      this.existingItems = response.results;\n    })\n  }\n\n  async checkForNewContent() {\n    if(!this.newAppTimestamp) {\n      return;\n    }\n\n    // New App\n    const startDate = this.newAppTimestamp;\n    // const startDate = new Date(\"2020-09-01\");\n    const endDate = new Date(\"2030-09-01\");\n    console.log(\"timestamp\", {startDate, endDate})\n\n    const query = new SearchQueryBuilder()\n          .from(startDate)\n          .to(endDate)\n          .in(\"created\")\n          .and()\n          .match(this.getBuilder(this.appType).type).in(\"type\")\n          .and()\n          .match(this.username).in(\"owner\")\n\n    let items = [];\n    await searchItems({\n      q: query,\n      sortOrder: \"desc\",\n      sortField: \"created\"\n    }).then((response) => {\n      items = response.results;\n    })\n    \n    if(items.length > 0) {\n      this.app = items[0];\n      // Stop timer!\n      this.newAppTimestamp = null;\n    }\n  }\n\n  \n\n  renderGallery() {\n    const cards = this.existingItems?.map((item) => {\n      return (\n        <calcite-card class=\"app\">\n          <span slot=\"title\">\n            {item.title}\n          </span>\n          <span slot=\"subtitle\">\n            {item.snippet}\n          </span>\n          <calcite-chip slot=\"footer-start\" value={item.type} appearance=\"outline-fill\" kind=\"neutral\" icon=\"add-in\">\n            {item.type}\n          </calcite-chip>\n          <calcite-button slot=\"footer-end\" href={this.getBuilder(item.type).view + item.id} target=\"_new\" appearance='outline'>\n            Open App\n          </calcite-button>  \n          <calcite-button slot=\"footer-end\" href=\"javascript:window.alert('Add App')\" appearance='solid'>\n              Add App\n          </calcite-button>\n        </calcite-card>\n      )\n    })\n    console.log(\"items\", {items: this.existingItems, cards})\n\n    return (\n      <div>\n        {cards}\n      </div>\n    )\n  }\n\n  @State() app: any = null;\n  @State() showNewApp: boolean = false;\n  @State() showSelectApp: boolean = true;\n  \n  renderContent() {\n    return (\n      <calcite-shell>\n        <calcite-shell-panel \n          // ref={(el) => this.shellPanelEl = el} \n          collapsed={true} \n          slot=\"panel-start\" \n          position=\"start\" \n          id=\"shell-panel-start\"\n          >\n            <calcite-action-bar slot=\"action-bar\">\n                <calcite-action \n                  // ref={(el) => this.actionMapEl = el} \n                  active={this.showSelectApp}\n                  indicator={this.showSelectApp}\n                  onClick={() => { this.showSelectApp = true; this.showNewApp = !this.showSelectApp}}\n                  icon=\"search\" \n                  text=\"Existing App\" \n                  ></calcite-action>\n                <calcite-action \n                  // ref={(el) => this.actionChannelsEl = el} \n                  active={this.showNewApp}\n                  indicator={this.showNewApp}\n                  onClick={() => { this.showNewApp = true; this.showSelectApp = !this.showNewApp}}\n                  text=\"New App\" \n                  icon=\"add-in-new\"></calcite-action>                  \n            </calcite-action-bar>\n        </calcite-shell-panel>\n        <calcite-panel heading={this.showNewApp ? `Create a New App` : `Search for Apps`}>\n              {this.showNewApp ? this.renderNewContent() :  this.renderGallery()}\n            </calcite-panel>\n    </calcite-shell>\n    )\n  }\n  renderNewContent() {\n    if(!!this.app) {\n      return this.renderApp();\n    }\n\n    if(!this.newAppTimestamp) {\n      return this.renderNewOptions();\n    }\n\n\n    // Nothing else, so loading!\n    return this.renderLoading(); \n  }\n  renderApp() {\n    return (\n      <calcite-card class=\"app\">\n        <span slot=\"title\">\n        <calcite-label>\n          App Title\n          <calcite-input placeholder=\"Enter App Title\" value={this.app.title}></calcite-input>\n        </calcite-label>\n \n          \n        </span>\n        <span slot=\"subtitle\">\n        <calcite-label>\n          App Summary\n          <calcite-input placeholder=\"Enter App Title\" value={this.app.snippet}></calcite-input>\n        </calcite-label>       \n        </span>\n        <calcite-chip slot=\"footer-start\" value={this.app.type} appearance=\"outline-fill\" kind=\"neutral\" icon=\"add-in\">\n        {this.app.type}\n        </calcite-chip>\n        <calcite-button slot=\"footer-end\" href=\"javascript:window.alert('Open Workspace')\" appearance='outline'>\n            Manage App\n        </calcite-button>\n        <calcite-button slot=\"footer-end\" href={this.getBuilder(this.appType).view + this.app.id} target=\"_new\">\n            Add App\n        </calcite-button>\n\n      <strong>Add App to the Catalog</strong>\n      <calcite-label layout=\"inline\">\n      <calcite-checkbox checked></calcite-checkbox>\n        Add to Parks Content Group\n    </calcite-label>\n    <calcite-label layout=\"inline\">\n        <calcite-checkbox checked></calcite-checkbox>\n        Add to Parks Collaboration Group\n    </calcite-label>\n    <calcite-button href='#' appearance='outline'>\n      Choose other groups\n    </calcite-button>\n    </calcite-card>\n    )\n  }\n\n  @State() appType: string = null;\n  private builders = [\n    {\n      name: \"StoryMap\",\n      type: \"StoryMap\",\n      key: \"storymap\",\n      new: \"https://storymaps.arcgis.com/stories/new\",\n      view: \"https://storymaps.arcgis.com/stories/\"\n    },{\n      name: \"Dashboard\",\n      type: \"Dashboard\",\n      key: \"dashboard\",\n      new: \"https://dcdev.maps.arcgis.com/apps/dashboards/new\",\n      view: \"https://storymaps.arcgis.com/stories/\"\n    },{\n      name: \"Instant App\",\n      type: \"Web Mapping Application\",\n      key: \"instant\",\n      new: \"https://dcdev.maps.arcgis.com/apps/instantgallery/index.html?tab=browseAll\",\n      view: \"https://storymaps.arcgis.com/stories/\"\n    }\n  ]\n  private defaultBuilder = {\n    name: \"ArcGIS Online\",\n    type: \"None\",\n    key: \"ago\",\n    new: \"https://dcdev.maps.arcgis.com/home/\",\n    view: \"https://dcdev.maps.arcgis.com/home/items.html?id=\"\n  }\n\n  renderLoading() {\n    return(\n      <calcite-loader \n        label=\"Waiting for a new app to be created...\" \n        text=\"Waiting for a new app to be created...\"\n        type=\"indeterminate\"></calcite-loader>\n    )\n  }\n  renderNewButton() {\n    return (\n      <calcite-button\n        appearance=\"solid\"\n        color=\"blue\"\n        scale=\"s\"\n        \n        onClick={() => this.openModal()}\n      >\n        New App\n      </calcite-button>\n    );\n  }\n  newAppOpen(type: string) {\n    this.newAppTimestamp = new Date();\n    this.newAppSelected = true;\n    this.appType = type;\n    console.debug(\"newAppOpen\", {type, new: this.getBuilder(this.appType)})\n    window.open(this.getBuilder(this.appType).new, \"_blank\");\n  }\n\n  getBuilder(type: string) {\n    let builder = this.builders.filter((builder) => {\n      return builder.key === type;\n    })\n    if(builder.length === 0) {\n      builder = [this.defaultBuilder]\n    }\n    return builder[0]\n  }\n  renderNewOptions() {\n    return([\n     <div class=\"new-options\">\n        {this.builders.map((builder) => {\n          return (\n            <calcite-button\n              appearance=\"solid\"\n              color=\"blue\"\n              onClick={() => this.newAppOpen(builder.key)}\n            >\n              New {builder.name}\n            </calcite-button>\n          )\n        })}\n      </div>,\n        <calcite-notice open icon=\"layers-reference\">\n        <div slot=\"title\">Create and then Embed</div>\n        <div slot=\"message\">Choose a builder that will open in a new tab. When you save that App then it will be available here.\",</div>\n        <calcite-link slot=\"link\" title=\"my action\">\n            Read more\n        </calcite-link>\n    </calcite-notice>  \n    ]\n    )\n  }\n\n}\n"],"mappings":"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"}